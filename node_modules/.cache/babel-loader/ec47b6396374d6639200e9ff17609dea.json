{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/REACT/ProjectReactClasses/src/Components/Mainpage.js\";\nimport { Component } from \"react\";\nimport User from \"./User - Components/User\";\nimport AddUserComp from \"./User - Components/AddUser\";\nimport TodosComp from \"./Todos - Components/todosComp\";\nimport PostsComp from \"./Posts - Components/postsComp\";\nimport './style.css';\nimport { GetAllUsers, searchUsers, UpdateUser, AddtoArray, RemoveFromArray, GetAllTodos, GetAllPosts, AddUser, MarkTaskComplete } from \"./utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MainPage extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = async e => {\n      const {\n        value\n      } = e.target;\n      /* returns new array which includes only the users that include the search value */\n\n      const users = await searchUsers(this.state.users, value);\n      this.setState({\n        usersSearch: users,\n        searchInput: value\n      });\n    };\n\n    this.deleteUser = id => {\n      /* Removing the user in both arrays with a function in the Utils */\n      const users = RemoveFromArray([...this.state.users], id);\n      const usersSearch = RemoveFromArray([...this.state.usersSearch], id);\n      /*\r\n         Checking if this user is onClick while we want to delete him\r\n         in order to undisplay the Todos & Posts\r\n      */\n\n      if (this.state.idPressed == id) this.setState({\n        isIdClicked: false\n      });\n      this.setState({\n        users,\n        usersSearch\n      });\n    };\n\n    this.updateUser = userObj =>\n    /* The userObj is the user newUpdated user */\n    {\n      /* Function Update the user and returns the new Users Array */\n      const newUsersSearch = UpdateUser(this.state.usersSearch, userObj);\n      const newUsers = UpdateUser(this.state.users, userObj);\n      this.setState({\n        usersSearch: newUsersSearch,\n        users: newUsers\n      });\n    };\n\n    this.handleAddUser = async obj => {\n      /* Adding to the original users Array the new User */\n      const newUsers = AddUser(this.state.users, obj);\n      /* Searching again on usersOriginal array with the search input  */\n\n      const usersSearch = await searchUsers(newUsers, this.state.searchInput);\n      this.setState({\n        users: newUsers,\n        usersSearch,\n        AddUserDisplay: false,\n        isIdClicked: false\n      });\n    };\n\n    this.displayDetails = id => {\n      this.setState({\n        isIdClicked: true,\n        idPressed: id,\n        AddUserDisplay: false\n      });\n    };\n\n    this.cancelAddUser = () => {\n      this.setState({\n        AddUserDisplay: false,\n        isIdClicked: false\n      });\n    };\n\n    this.markCompleteTask = id => {\n      const todos = MarkTaskComplete(this.state.todos, id);\n      this.setState({\n        todos\n      });\n    };\n\n    this.addPost = newPost => {\n      const posts = AddtoArray(this.state.posts, newPost);\n      this.setState({\n        posts\n      });\n    };\n\n    this.addTodo = newTodo => {\n      const todos = AddtoArray(this.state.todos, newTodo);\n      this.setState({\n        todos\n      });\n    };\n\n    this.state = {\n      users: [],\n      usersSearch: [],\n      todos: [],\n      posts: [],\n      idPressed: \"\",\n      searchInput: \"\",\n      isIdClicked: false,\n      AddUserDisplay: false\n    };\n  } //Getting Arrays at MainPage():\n\n\n  async componentDidMount() {\n    const users = await GetAllUsers();\n    const todos = await GetAllTodos();\n    const posts = await GetAllPosts();\n    /* Users Search - for Start include All the users */\n\n    this.setState({\n      usersSearch: users,\n      users,\n      todos,\n      posts\n    });\n  }\n  /* occures when search input changes */\n\n\n  render() {\n    const users = this.state.usersSearch.map((user, index) => {\n      return /*#__PURE__*/_jsxDEV(User, {\n        data: user,\n        idPressed: this.state.idPressed,\n        todosArray: this.state.todos,\n        delete: this.deleteUser,\n        update: this.updateUser,\n        postsAndTodos: this.displayDetails,\n        array: this.state.usersSearch\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type to Search..\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"adduser\",\n          onClick: () => this.setState({\n            AddUserDisplay: true,\n            idPressed: \"\",\n            isIdClicked: false\n          }),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"users\",\n        children: users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), this.state.AddUserDisplay ? /*#__PURE__*/_jsxDEV(AddUserComp, {\n        hide: this.cancelAddUser,\n        add: this.handleAddUser,\n        display: this.state.AddUserDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"500px\",\n          height: \"700px\",\n          position: \"absolute\",\n          top: \"5px\",\n          right: \"50px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TodosComp, {\n          todos: this.state.todos,\n          userId: this.state.idPressed,\n          markComplete: this.markCompleteTask,\n          visibility: this.state.isIdClicked,\n          addTodo: this.addTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PostsComp, {\n          posts: this.state.posts,\n          userId: this.state.idPressed,\n          visibility: this.state.isIdClicked,\n          addPost: this.addPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/REACT/ProjectReactClasses/src/Components/Mainpage.js"],"names":["Component","User","AddUserComp","TodosComp","PostsComp","GetAllUsers","searchUsers","UpdateUser","AddtoArray","RemoveFromArray","GetAllTodos","GetAllPosts","AddUser","MarkTaskComplete","MainPage","constructor","handleChange","e","value","target","users","state","setState","usersSearch","searchInput","deleteUser","id","idPressed","isIdClicked","updateUser","userObj","newUsersSearch","newUsers","handleAddUser","obj","AddUserDisplay","displayDetails","cancelAddUser","markCompleteTask","todos","addPost","newPost","posts","addTodo","newTodo","componentDidMount","render","map","user","index","width","height","position","top","right"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAO,aAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,UAAnC,EAA8CC,UAA9C,EAA0DC,eAA1D,EAA2EC,WAA3E,EAAwFC,WAAxF,EAAqGC,OAArG,EAA6GC,gBAA7G,QAAqI,SAArI;;AAEA,eAAe,MAAMC,QAAN,SAAuBd,SAAvB,CACf;AACIe,EAAAA,WAAW,GACX;AACI;;AADJ,SAyBAC,YAzBA,GAyBe,MAAOC,CAAP,IACf;AACI,YAAM;AAACC,QAAAA;AAAD,UAAUD,CAAC,CAACE,MAAlB;AACA;;AACA,YAAMC,KAAK,GAAG,MAAMd,WAAW,CAAC,KAAKe,KAAL,CAAWD,KAAZ,EAAkBF,KAAlB,CAA/B;AACA,WAAKI,QAAL,CAAc;AAACC,QAAAA,WAAW,EAACH,KAAb;AAAmBI,QAAAA,WAAW,EAACN;AAA/B,OAAd;AACH,KA/BD;;AAAA,SAkCAO,UAlCA,GAkCcC,EAAD,IACb;AACI;AACA,YAAMN,KAAK,GAAGX,eAAe,CAAC,CAAC,GAAG,KAAKY,KAAL,CAAWD,KAAf,CAAD,EAAuBM,EAAvB,CAA7B;AACA,YAAMH,WAAW,GAAGd,eAAe,CAAC,CAAC,GAAG,KAAKY,KAAL,CAAWE,WAAf,CAAD,EAA6BG,EAA7B,CAAnC;AAEA;AACR;AACA;AACA;;AACQ,UAAG,KAAKL,KAAL,CAAWM,SAAX,IAAwBD,EAA3B,EACI,KAAKJ,QAAL,CAAc;AAACM,QAAAA,WAAW,EAAC;AAAb,OAAd;AAEJ,WAAKN,QAAL,CAAc;AAACF,QAAAA,KAAD;AAAOG,QAAAA;AAAP,OAAd;AACH,KAhDD;;AAAA,SAmDAM,UAnDA,GAmDcC,OAAD;AAAa;AAC1B;AACI;AACA,YAAMC,cAAc,GAAGxB,UAAU,CAAC,KAAKc,KAAL,CAAWE,WAAZ,EAAwBO,OAAxB,CAAjC;AACA,YAAME,QAAQ,GAAGzB,UAAU,CAAC,KAAKc,KAAL,CAAWD,KAAZ,EAAkBU,OAAlB,CAA3B;AAEA,WAAKR,QAAL,CAAc;AAACC,QAAAA,WAAW,EAACQ,cAAb;AAA8BX,QAAAA,KAAK,EAACY;AAApC,OAAd;AACH,KA1DD;;AAAA,SA6DAC,aA7DA,GA6DgB,MAAOC,GAAP,IAChB;AACI;AACA,YAAMF,QAAQ,GAAGpB,OAAO,CAAC,KAAKS,KAAL,CAAWD,KAAZ,EAAkBc,GAAlB,CAAxB;AACA;;AACA,YAAMX,WAAW,GAAG,MAAMjB,WAAW,CAAC0B,QAAD,EAAU,KAAKX,KAAL,CAAWG,WAArB,CAArC;AAEA,WAAKF,QAAL,CAAc;AAACF,QAAAA,KAAK,EAACY,QAAP;AAAgBT,QAAAA,WAAhB;AAA4BY,QAAAA,cAAc,EAAC,KAA3C;AAAiDP,QAAAA,WAAW,EAAC;AAA7D,OAAd;AACH,KArED;;AAAA,SA4EAQ,cA5EA,GA4EkBV,EAAD,IACjB;AACI,WAAKJ,QAAL,CAAc;AAACM,QAAAA,WAAW,EAAC,IAAb;AAAkBD,QAAAA,SAAS,EAACD,EAA5B;AAA+BS,QAAAA,cAAc,EAAC;AAA9C,OAAd;AACH,KA/ED;;AAAA,SAkFAE,aAlFA,GAkFgB,MAChB;AACI,WAAKf,QAAL,CAAc;AAACa,QAAAA,cAAc,EAAC,KAAhB;AAAsBP,QAAAA,WAAW,EAAC;AAAlC,OAAd;AACH,KArFD;;AAAA,SA0FAU,gBA1FA,GA0FoBZ,EAAD,IACnB;AACI,YAAMa,KAAK,GAAG1B,gBAAgB,CAAC,KAAKQ,KAAL,CAAWkB,KAAZ,EAAkBb,EAAlB,CAA9B;AACA,WAAKJ,QAAL,CAAc;AAACiB,QAAAA;AAAD,OAAd;AACH,KA9FD;;AAAA,SAoGAC,OApGA,GAoGWC,OAAD,IACV;AACI,YAAMC,KAAK,GAAGlC,UAAU,CAAC,KAAKa,KAAL,CAAWqB,KAAZ,EAAkBD,OAAlB,CAAxB;AACA,WAAKnB,QAAL,CAAc;AAACoB,QAAAA;AAAD,OAAd;AACH,KAxGD;;AAAA,SA8GAC,OA9GA,GA8GWC,OAAD,IACV;AACI,YAAML,KAAK,GAAG/B,UAAU,CAAC,KAAKa,KAAL,CAAWkB,KAAZ,EAAkBK,OAAlB,CAAxB;AACA,WAAKtB,QAAL,CAAc;AAACiB,QAAAA;AAAD,OAAd;AACH,KAlHD;;AAEI,SAAKlB,KAAL,GAAa;AAACD,MAAAA,KAAK,EAAC,EAAP;AACDG,MAAAA,WAAW,EAAC,EADX;AAEDgB,MAAAA,KAAK,EAAC,EAFL;AAGDG,MAAAA,KAAK,EAAC,EAHL;AAIDf,MAAAA,SAAS,EAAC,EAJT;AAKDH,MAAAA,WAAW,EAAC,EALX;AAMDI,MAAAA,WAAW,EAAC,KANX;AAODO,MAAAA,cAAc,EAAC;AAPd,KAAb;AASH,GAbL,CAeI;;;AACuB,QAAjBU,iBAAiB,GACvB;AACI,UAAMzB,KAAK,GAAG,MAAMf,WAAW,EAA/B;AACA,UAAMkC,KAAK,GAAG,MAAM7B,WAAW,EAA/B;AACA,UAAMgC,KAAK,GAAG,MAAM/B,WAAW,EAA/B;AAEA;;AACA,SAAKW,QAAL,CAAc;AAACC,MAAAA,WAAW,EAACH,KAAb;AAAmBA,MAAAA,KAAnB;AAAyBmB,MAAAA,KAAzB;AAA+BG,MAAAA;AAA/B,KAAd;AACH;AAED;;;AA4FAI,EAAAA,MAAM,GACN;AACI,UAAM1B,KAAK,GAAG,KAAKC,KAAL,CAAWE,WAAX,CAAuBwB,GAAvB,CAA2B,CAACC,IAAD,EAAMC,KAAN,KACzC;AACI,0BAAQ,QAAC,IAAD;AAAkB,QAAA,IAAI,EAAED,IAAxB;AAA8B,QAAA,SAAS,EAAI,KAAK3B,KAAL,CAAWM,SAAtD;AAAiE,QAAA,UAAU,EAAE,KAAKN,KAAL,CAAWkB,KAAxF;AAA+F,QAAA,MAAM,EAAE,KAAKd,UAA5G;AAAwH,QAAA,MAAM,EAAE,KAAKI,UAArI;AAAkJ,QAAA,aAAa,EAAE,KAAKO,cAAtK;AAAsL,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWE;AAAxM,SAAW0B,KAAX;AAAA;AAAA;AAAA;AAAA,cAAR;AACH,KAHa,CAAd;AAKA,wBAAO;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,8BAEH;AAAK,QAAA,EAAE,EAAC,QAAR;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAoB,UAAA,WAAW,EAAC,kBAAhC;AAAmD,UAAA,QAAQ,EAAE,KAAKjC;AAAlE;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAS,UAAA,EAAE,EAAC,SAAZ;AAAsB,UAAA,OAAO,EAAE,MAAM,KAAKM,QAAL,CAAc;AAACa,YAAAA,cAAc,EAAC,IAAhB;AAAqBR,YAAAA,SAAS,EAAC,EAA/B;AAAkCC,YAAAA,WAAW,EAAC;AAA9C,WAAd,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFG,eAOH;AAAK,QAAA,EAAE,EAAC,OAAR;AAAA,kBACKR;AADL;AAAA;AAAA;AAAA;AAAA,cAPG,EAYF,KAAKC,KAAL,CAAWc,cAAX,gBAA4B,QAAC,WAAD;AAAa,QAAA,IAAI,EAAE,KAAKE,aAAxB;AAAuC,QAAA,GAAG,EAAE,KAAKJ,aAAjD;AAAgE,QAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWc;AAApF;AAAA;AAAA;AAAA;AAAA,cAA5B,gBACG;AAAK,QAAA,KAAK,EAAE;AAACe,UAAAA,KAAK,EAAC,OAAP;AAAeC,UAAAA,MAAM,EAAC,OAAtB;AAA8BC,UAAAA,QAAQ,EAAC,UAAvC;AAAkDC,UAAAA,GAAG,EAAC,KAAtD;AAA6DC,UAAAA,KAAK,EAAC;AAAnE,SAAZ;AAAA,gCACA,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE,KAAKjC,KAAL,CAAWkB,KAA7B;AAAoC,UAAA,MAAM,EAAE,KAAKlB,KAAL,CAAWM,SAAvD;AAAkE,UAAA,YAAY,EAAE,KAAKW,gBAArF;AAAuG,UAAA,UAAU,EAAE,KAAKjB,KAAL,CAAWO,WAA9H;AAA2I,UAAA,OAAO,EAAE,KAAKe;AAAzJ;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWqB,KAA7B;AAAoC,UAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWM,SAAvD;AAAkE,UAAA,UAAU,EAAE,KAAKN,KAAL,CAAWO,WAAzF;AAAsG,UAAA,OAAO,EAAE,KAAKY;AAApH;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbD;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAmBH;;AAhJL","sourcesContent":["import { Component } from \"react\";\r\nimport User from \"./User - Components/User\";\r\nimport AddUserComp from \"./User - Components/AddUser\";\r\nimport TodosComp from \"./Todos - Components/todosComp\";\r\nimport PostsComp from \"./Posts - Components/postsComp\";\r\nimport './style.css'\r\nimport { GetAllUsers, searchUsers, UpdateUser,AddtoArray, RemoveFromArray, GetAllTodos, GetAllPosts ,AddUser,MarkTaskComplete } from \"./utils\";\r\n\r\nexport default class MainPage extends Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {users:[], \r\n                    usersSearch:[], \r\n                    todos:[], \r\n                    posts:[], \r\n                    idPressed:\"\" ,\r\n                    searchInput:\"\",\r\n                    isIdClicked:false, \r\n                    AddUserDisplay:false,\r\n                }\r\n    }\r\n\r\n    //Getting Arrays at MainPage():\r\n    async componentDidMount()\r\n    {\r\n        const users = await GetAllUsers();\r\n        const todos = await GetAllTodos();\r\n        const posts = await GetAllPosts();\r\n        \r\n        /* Users Search - for Start include All the users */\r\n        this.setState({usersSearch:users,users,todos,posts});\r\n    }\r\n\r\n    /* occures when search input changes */\r\n    handleChange = async (e) =>\r\n    {\r\n        const {value} = e.target;\r\n        /* returns new array which includes only the users that include the search value */\r\n        const users = await searchUsers(this.state.users,value); \r\n        this.setState({usersSearch:users,searchInput:value});\r\n    }\r\n\r\n    /* occures when you click on delete user */\r\n    deleteUser = (id) =>\r\n    {\r\n        /* Removing the user in both arrays with a function in the Utils */\r\n        const users = RemoveFromArray([...this.state.users],id);\r\n        const usersSearch = RemoveFromArray([...this.state.usersSearch],id)\r\n\r\n        /*\r\n           Checking if this user is onClick while we want to delete him\r\n           in order to undisplay the Todos & Posts\r\n        */\r\n        if(this.state.idPressed == id)\r\n            this.setState({isIdClicked:false})\r\n\r\n        this.setState({users,usersSearch})\r\n    }\r\n\r\n    /* Occures When you click on the Update user */\r\n    updateUser = (userObj) => /* The userObj is the user newUpdated user */\r\n    {\r\n        /* Function Update the user and returns the new Users Array */\r\n        const newUsersSearch = UpdateUser(this.state.usersSearch,userObj);\r\n        const newUsers = UpdateUser(this.state.users,userObj)\r\n\r\n        this.setState({usersSearch:newUsersSearch , users:newUsers});\r\n    }\r\n\r\n    /* Occures when You click on add user  */\r\n    handleAddUser = async (obj) =>\r\n    {\r\n        /* Adding to the original users Array the new User */\r\n        const newUsers = AddUser(this.state.users,obj)\r\n        /* Searching again on usersOriginal array with the search input  */\r\n        const usersSearch = await searchUsers(newUsers,this.state.searchInput);\r\n        \r\n        this.setState({users:newUsers,usersSearch,AddUserDisplay:false,isIdClicked:false})\r\n    }\r\n\r\n    /*\r\n     Occures when you click on one of id.\r\n     Changing the isIdClicked to true in order to Present Todos And Posts.\r\n     Also Saving the id that pressed in order to Change the background of the user\r\n    */\r\n    displayDetails = (id) =>\r\n    {\r\n        this.setState({isIdClicked:true,idPressed:id,AddUserDisplay:false});\r\n    }\r\n\r\n    /* Hides Add User */\r\n    cancelAddUser = () =>\r\n    {\r\n        this.setState({AddUserDisplay:false,isIdClicked:false})\r\n    }\r\n\r\n    /* \r\n    Occures when user Click on Mark Complete Task\r\n    */\r\n    markCompleteTask = (id) =>\r\n    {\r\n        const todos = MarkTaskComplete(this.state.todos,id);\r\n        this.setState({todos});\r\n    }\r\n\r\n    /*\r\n    Occures When you click on add post\r\n    Adding the new Post to the Posts Array with function in the utils\r\n    */\r\n    addPost = (newPost) =>\r\n    {\r\n        const posts = AddtoArray(this.state.posts,newPost);\r\n        this.setState({posts})\r\n    }\r\n\r\n    /*\r\n    Occures When you click on add todo\r\n    Adding the new Todo to the Todos Array with function in the utils\r\n    */\r\n    addTodo = (newTodo) =>\r\n    {\r\n        const todos = AddtoArray(this.state.todos,newTodo);\r\n        this.setState({todos})\r\n    }\r\n\r\n    render()\r\n    {\r\n        const users = this.state.usersSearch.map((user,index) =>\r\n        {\r\n            return (<User key={index} data={user} idPressed = {this.state.idPressed} todosArray={this.state.todos} delete={this.deleteUser} update={this.updateUser}  postsAndTodos={this.displayDetails} array={this.state.usersSearch}/>);\r\n        });\r\n\r\n        return(<div id=\"container\">\r\n\r\n            <div id=\"search\">\r\n                <input type=\"text\"  placeholder=\"Type to Search..\" onChange={this.handleChange}/>\r\n                <button  id=\"adduser\" onClick={() => this.setState({AddUserDisplay:true,idPressed:\"\",isIdClicked:false})}>Add</button>\r\n            </div>\r\n\r\n            <div id=\"users\">\r\n                {users}\r\n            </div>\r\n\r\n            {/* Checking if you Clicked on Add User Button. if Yes Present the AddUserComp else the Todos&Posts */}\r\n            {this.state.AddUserDisplay ? <AddUserComp hide={this.cancelAddUser} add={this.handleAddUser} display={this.state.AddUserDisplay}/> :\r\n                <div style={{width:\"500px\",height:\"700px\",position:\"absolute\",top:\"5px\" ,right:\"50px\"}}>\r\n                <TodosComp todos={this.state.todos} userId={this.state.idPressed} markComplete={this.markCompleteTask} visibility={this.state.isIdClicked} addTodo={this.addTodo}/>\r\n                <PostsComp posts={this.state.posts} userId={this.state.idPressed} visibility={this.state.isIdClicked} addPost={this.addPost}/>\r\n            </div>}\r\n            \r\n        </div>)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}