{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/REACT/ProjectReactClasses/src/Components/Todos - Components/todosComp.js\";\nimport { Component } from \"react\";\nimport { GetAllTodosById } from \"../utils\";\nimport TodoComp from \"./todoComp\";\nimport AddTodoComp from \"./addTodoComp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TodosComp extends Component {\n  constructor() {\n    super();\n\n    this.changeDisplay = added => {\n      if (added) this.setState({\n        isAdded: true\n      });\n      /* Turn the display boolean to the opposite */\n\n      this.setState({\n        displayAddTodo: !this.state.displayAddTodo\n      });\n    };\n\n    this.state = {\n      todos: [],\n      userId: \"\",\n      displayAddTodo: false,\n      isAdded: false\n    };\n  }\n\n  async componentDidMount() {\n    const todos = await GetAllTodosById(this.props.todos, this.props.userId);\n    this.setState({\n      userId: this.props.userId,\n      todos,\n      isAdded: false,\n      displayAddTodo: false\n    });\n  }\n  /* Checking if the props send is diffrent from the last */\n\n\n  async componentDidUpdate() {\n    if (this.state.userId != this.props.userId || this.state.isAdded)\n      /* if user Added also go inside the if */\n      {\n        const todos = await GetAllTodosById(this.props.todos, this.props.userId);\n        this.setState({\n          userId: this.props.userId,\n          todos,\n          isAdded: false,\n          displayAddTodo: false\n        });\n      }\n  }\n  /* gets bollean if user was added  */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: this.props.visibility ? \"block\" : \"none\",\n        position: \"absolute\",\n        top: \"10px\",\n        left: \"50px\"\n      },\n      children: this.state.displayAddTodo ? /*#__PURE__*/_jsxDEV(AddTodoComp, {\n        todosArray: this.props.todos,\n        userId: this.state.userId,\n        changeDisplay: this.changeDisplay,\n        addTodo: this.props.addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 43\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"title-todos\",\n          children: [\"User \", this.props.userId, \" todos\", /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              borderRadius: \"5px\",\n              marginLeft: \"16rem\",\n              marginBottom: \"3px\"\n            },\n            id: \"add-todo\",\n            onClick: () => this.changeDisplay(),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"todos-container\",\n          style: {\n            overflow: \"scroll\",\n            overflowX: \"hidden\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            border: \"1px black solid\",\n            width: \"400px\",\n            height: \"325px\"\n          },\n          children: this.state.todos.map((todo, index) => {\n            return /*#__PURE__*/_jsxDEV(TodoComp, {\n              todo: todo,\n              markComplete: this.props.markComplete\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/REACT/ProjectReactClasses/src/Components/Todos - Components/todosComp.js"],"names":["Component","GetAllTodosById","TodoComp","AddTodoComp","TodosComp","constructor","changeDisplay","added","setState","isAdded","displayAddTodo","state","todos","userId","componentDidMount","props","componentDidUpdate","render","display","visibility","position","top","left","addTodo","borderRadius","marginLeft","marginBottom","overflow","overflowX","flexDirection","alignItems","border","width","height","map","todo","index","markComplete"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport {GetAllTodosById } from \"../utils\";\r\nimport TodoComp from \"./todoComp\";\r\nimport AddTodoComp from \"./addTodoComp\";\r\n\r\nexport default class TodosComp extends Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {todos:[],userId:\"\" ,displayAddTodo:false,isAdded:false}\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        const todos = await GetAllTodosById(this.props.todos,this.props.userId);\r\n        this.setState({userId:this.props.userId,todos,isAdded:false,displayAddTodo:false})\r\n    }\r\n    \r\n    /* Checking if the props send is diffrent from the last */\r\n    async componentDidUpdate()\r\n    {\r\n        if(this.state.userId!=this.props.userId || this.state.isAdded) /* if user Added also go inside the if */\r\n        {\r\n            const todos = await GetAllTodosById(this.props.todos,this.props.userId);\r\n            this.setState({userId:this.props.userId,todos,isAdded:false,displayAddTodo:false})\r\n        }\r\n    }\r\n\r\n    /* gets bollean if user was added  */\r\n    changeDisplay = (added) =>\r\n    {\r\n        if(added)\r\n            this.setState({isAdded:true})\r\n        /* Turn the display boolean to the opposite */\r\n        this.setState({displayAddTodo:!this.state.displayAddTodo})\r\n    }\r\n\r\n    render()\r\n    {\r\n        \r\n        return(<div style={{display:this.props.visibility ? \"block\" : \"none\",position:\"absolute\",top:\"10px\",left:\"50px\"}}>\r\n             {/* Checking if Add Clicked and if does The Add user comonents show else the Todos */}\r\n            {(this.state.displayAddTodo) ?<AddTodoComp todosArray={this.props.todos} userId={this.state.userId} changeDisplay={this.changeDisplay} addTodo={this.props.addTodo}/> :\r\n            <div>\r\n                <div id=\"title-todos\">\r\n                    User {this.props.userId} todos\r\n                    <button style={{borderRadius:\"5px\",marginLeft:\"16rem\",marginBottom:\"3px\"}} id=\"add-todo\" onClick={() => this.changeDisplay()}>Add</button>\r\n                </div>\r\n                <div id=\"todos-container\" style={{overflow:\"scroll\",overflowX:\"hidden\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\",border:\"1px black solid\",width:\"400px\",height:\"325px\"}}>\r\n                    {this.state.todos.map((todo,index) =>\r\n                    {\r\n                        return(<TodoComp key={index} todo={todo} markComplete={this.props.markComplete}/>)\r\n                    })}\r\n                </div>\r\n            </div>}\r\n\r\n        </div>)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}