{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/REACT/Project_React_Classes/src/Components/MainPosts.js\";\nimport { GetPostsById } from \"./Utils\";\nimport { Component } from \"react\";\nimport AddPost from \"./addPost\";\nimport Post from \"./Post\";\nimport './StyleSheet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MainPosts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addPost = (title, body) => {\n      this.props.addPost(title, body, this.props.id);\n      this.setState({\n        add: true\n      });\n      this.showAddPost();\n    };\n\n    this.showAddPost = () => this.setState(prevState => ({\n      showAddPost: !prevState.showAddPost\n    }));\n\n    this.handleChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.state = {\n      posts: [],\n      PostTitle: '',\n      body: '',\n      id: '',\n      add: false,\n      showAddPost: false\n    };\n  } //Updating the component with the correct posts--->when user id was changed:\n\n\n  async componentDidUpdate() {\n    if (this.props.id !== this.state.id || this.state.add) {\n      const posts = await GetPostsById(this.props.id, this.props.posts);\n      this.setState({\n        id: this.props.id,\n        posts: posts,\n        add: false\n      });\n      this.props.pressedFunc(this.props.id);\n    }\n  } //When add button pressed --> sends a new post to the main page:\n\n\n  render() {\n    const postsMapper = this.state.posts.map((post, index) => /*#__PURE__*/_jsxDEV(Post, {\n      post: post\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 67\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: this.props.visibility ? 'block' : 'none'\n      },\n      className: \"MainPostsDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: !this.state.showAddPost ? 'block' : 'none'\n        },\n        className: \"PostsTitle\",\n        children: [\"Posts: User \", this.props.id, \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: \"Add\",\n          className: \"addTodo\",\n          onClick: this.showAddPost,\n          type: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 133\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: this.state.showAddPost ? 'none' : 'block'\n        },\n        className: \"postsDiv\",\n        children: [postsMapper, \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddPost, {\n        id: this.props.id,\n        showAddPost: this.state.showAddPost,\n        hide: this.showAddPost,\n        addPost: this.addPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/REACT/Project_React_Classes/src/Components/MainPosts.js"],"names":["GetPostsById","Component","AddPost","Post","MainPosts","constructor","props","addPost","title","body","id","setState","add","showAddPost","prevState","handleChange","e","target","name","value","state","posts","PostTitle","componentDidUpdate","pressedFunc","render","postsMapper","map","post","index","display","visibility"],"mappings":"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","sourcesContent":["import { GetPostsById } from \"./Utils\";\r\nimport { Component } from \"react\";\r\nimport AddPost from \"./addPost\";\r\nimport Post from \"./Post\";\r\nimport './StyleSheet.css';\r\n\r\nexport default class MainPosts extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            posts: [],\r\n            PostTitle: '',\r\n            body: '',\r\n            id: '',\r\n            add: false,\r\n            showAddPost: false\r\n        }\r\n    }\r\n    //Updating the component with the correct posts--->when user id was changed:\r\n    async componentDidUpdate() \r\n    {\r\n        if ((this.props.id !== this.state.id) || this.state.add) {                         \r\n            const posts = await GetPostsById(this.props.id, this.props.posts)             \r\n            this.setState({ id: this.props.id, posts: posts, add: false })               \r\n            this.props.pressedFunc(this.props.id)                                       \r\n        }\r\n    }\r\n    //When add button pressed --> sends a new post to the main page:\r\n    addPost = (title, body) => \r\n    {\r\n        this.props.addPost(title, body, this.props.id)                            \r\n        this.setState({ add: true })                                             \r\n        this.showAddPost()                                                    \r\n    }\r\n    //Toggling the visibility of the post divs:\r\n    showAddPost = () => this.setState((prevState) => ({ showAddPost: !prevState.showAddPost }))\r\n\r\n    //handling the input from the client\r\n    handleChange = (e) => this.setState({ [e.target.name]: e.target.value })\r\n    render() {\r\n        const postsMapper = this.state.posts.map((post, index) => <Post key={index} post={post} />)\r\n        return (<div style={{ display: this.props.visibility ? 'block' : 'none' }} className='MainPostsDiv' >\r\n            <div style={{ display: !this.state.showAddPost ? 'block' : 'none' }} className=\"PostsTitle\">Posts: User {this.props.id} <input value='Add' className='addTodo' onClick={this.showAddPost} type='button' /></div>\r\n            <div style={{ display: this.state.showAddPost ? 'none' : 'block' }} className='postsDiv' >{postsMapper}  </div>\r\n            <AddPost id={this.props.id} showAddPost={this.state.showAddPost} hide={this.showAddPost} addPost={this.addPost} />\r\n        </div>)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}