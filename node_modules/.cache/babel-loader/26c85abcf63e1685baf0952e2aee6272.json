{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/REACT/ProjectReactClasses/src/Components/User - Components/User.js\";\nimport { Component } from \"react\";\nimport OtherData from \"./otherData\";\nimport '../style.css';\nimport { CheckTodos } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class User extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      const {\n        name\n      } = e.target;\n      this.setState({\n        [name]: e.target.value\n      });\n    };\n\n    this.deleteUser = () => {\n      this.props.delete(this.props.data.id);\n    };\n\n    this.updateAddress = obj => {\n      this.setState({\n        addressData: obj\n      });\n    };\n\n    this.updateUser = () => {\n      const user = { ...this.state.user\n      };\n      /* Updating the User Details */\n\n      user.address = this.state.addressData;\n      user.name = this.state.name;\n      user.email = this.state.email;\n      /* Calls Update user callback to the Mainpage */\n\n      this.props.update(user);\n    };\n\n    this.ChangeDisplay = () => {\n      this.props.postsAndTodos(this.state.id);\n      /*Sending the id Pressed for the Mainpage to color it */\n    };\n\n    this.state = {\n      user: {},\n      id: \"\",\n      name: \"\",\n      email: \"\",\n      addressData: {},\n      completed: false,\n      display: false,\n      blockData: false\n    };\n  }\n  /* Every User on Mounting Gets his data */\n\n\n  componentDidMount() {\n    this.setState({\n      user: this.props.data,\n      name: this.props.data.name,\n      email: this.props.data.email,\n      id: this.props.data.id\n    });\n  }\n  /* Every State Change The Function occures */\n\n\n  componentDidUpdate() {\n    const isCompleted = CheckTodos(this.state.id, this.props.todosArray);\n    /* Returns if All the todos Completed */\n\n    /* Changing the completed state to the current  */\n\n    if (this.state.completed !== isCompleted) this.setState({\n      completed: isCompleted\n    });\n    /* Checking if the id state is diff from the props */\n\n    if (this.state.id != this.props.data.id) this.setState({\n      email: this.props.data.email,\n      name: this.props.data.name,\n      id: this.props.data.id,\n      backGround: false\n    });\n  }\n  /* Changing the states Name/Email onChange of the inputs */\n\n\n  render() {\n    const border = this.state.completed ? \"green\" : \"red\";\n    const backGround = this.props.idPressed == this.state.id ? \"rgb(219, 167, 127)\" : \"rgb(243, 217, 197)\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"user\",\n      style: {\n        borderColor: border,\n        backgroundColor: backGround\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"title-id\",\n        className: \"weight\",\n        onClick: this.ChangeDisplay,\n        children: [\" ID: \", this.props.data.id, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 110\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"user-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: this.state.name,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            value: this.state.email,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"user-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onMouseOver: () => this.setState({\n            blockData: true\n          }),\n          onClick: () => this.setState({\n            blockData: false\n          }),\n          children: \"Other Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(OtherData, {\n          id: this.props.data.id,\n          callback: this.updateAddress,\n          class: this.state.blockData ? \"show\" : \"hide\",\n          array: this.props.array\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.updateUser,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.deleteUser,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/REACT/ProjectReactClasses/src/Components/User - Components/User.js"],"names":["Component","OtherData","CheckTodos","User","constructor","props","handleChange","e","name","target","setState","value","deleteUser","delete","data","id","updateAddress","obj","addressData","updateUser","user","state","address","email","update","ChangeDisplay","postsAndTodos","completed","display","blockData","componentDidMount","componentDidUpdate","isCompleted","todosArray","backGround","render","border","idPressed","borderColor","backgroundColor","array"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport OtherData from \"./otherData\";\r\nimport '../style.css'\r\nimport { CheckTodos } from \"../utils\";\r\nexport default class User extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {user:{},id:\"\",name:\"\",email:\"\",addressData:{}, completed:false, display:false,blockData:false}\r\n    }\r\n\r\n    /* Every User on Mounting Gets his data */\r\n    componentDidMount()\r\n    {\r\n        this.setState({user:this.props.data, name:this.props.data.name ,email:this.props.data.email , id:this.props.data.id})\r\n    }\r\n    \r\n    /* Every State Change The Function occures */\r\n    componentDidUpdate()\r\n    {\r\n        const isCompleted = CheckTodos(this.state.id,this.props.todosArray); /* Returns if All the todos Completed */\r\n\r\n        /* Changing the completed state to the current  */\r\n        if(this.state.completed !== isCompleted)\r\n            this.setState({completed:isCompleted})\r\n        /* Checking if the id state is diff from the props */\r\n        if(this.state.id != this.props.data.id)\r\n            this.setState({email:this.props.data.email , name:this.props.data.name,id:this.props.data.id,backGround:false})\r\n    }\r\n\r\n    /* Changing the states Name/Email onChange of the inputs */\r\n    handleChange = (e) =>\r\n    {\r\n        const {name} = e.target;\r\n        this.setState({[name]:e.target.value});\r\n    }\r\n\r\n    /* Calls Delete callback function with the current id */\r\n    deleteUser = () =>\r\n    {\r\n        this.props.delete(this.props.data.id);\r\n    }\r\n\r\n    /* Update the address state if there was an update */\r\n    updateAddress = (obj) =>\r\n    {\r\n        this.setState({addressData:obj})\r\n    }\r\n\r\n    /* Occures When clicking on update user */\r\n    updateUser = () =>\r\n    {\r\n        const user = {...this.state.user};\r\n        /* Updating the User Details */\r\n        user.address = this.state.addressData;\r\n        user.name = this.state.name;\r\n        user.email = this.state.email;\r\n        /* Calls Update user callback to the Mainpage */\r\n        this.props.update(user);\r\n    }\r\n\r\n    /* show Todos And Posts  */\r\n    ChangeDisplay = () =>\r\n    {\r\n        this.props.postsAndTodos(this.state.id); /*Sending the id Pressed for the Mainpage to color it */\r\n    }\r\n\r\n    render()\r\n    {\r\n        const border = this.state.completed ? \"green\" : \"red\";\r\n        const backGround = this.props.idPressed == this.state.id ? \"rgb(219, 167, 127)\" : \"rgb(243, 217, 197)\";\r\n\r\n        return(<div id=\"user\" style={{borderColor:border,backgroundColor:backGround}}>\r\n\r\n        <span id=\"title-id\" className=\"weight\" onClick={this.ChangeDisplay}> ID: {this.props.data.id} </span><br/>\r\n\r\n        <div id=\"user-inputs\">\r\n            <div>\r\n                Name:\r\n                <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange}/>\r\n            </div>\r\n            <div>\r\n                Email:\r\n                <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=\"user-buttons\">\r\n            <button onMouseOver={() => this.setState({blockData:true})} onClick={() =>this.setState({blockData:false})}>Other Data</button>\r\n            <OtherData id={this.props.data.id} callback={this.updateAddress} class = {this.state.blockData ? \"show\" :\"hide\"} array={this.props.array}/>\r\n            <button  onClick={this.updateUser}>Update</button>\r\n            <button  onClick={this.deleteUser}>Delete</button>\r\n        </div>\r\n    </div>)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}