{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/REACT/Project_React_Classes/src/Components/MainPage.js\";\nimport { AddNewUser, AddPost, AddTodo, CompleteTodo, DeleteUser, GetAllUsers, Search, UpdateUser } from \"./Utils\";\nimport { Component } from \"react\";\nimport { getAllTodos } from \"./DALtodos\";\nimport { getAllPosts } from \"./DALposts\";\nimport UserComp from \"./userComp\";\nimport AddUser from \"./AddUserComp\";\nimport MainTodos from \"./MainTodos\";\nimport MainPosts from \"./MainPosts\";\nimport './StyleSheet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Users extends Component {\n  constructor() {\n    super(); //states:\n\n    this.handleChange = async e => {\n      const {\n        value\n      } = e.target;\n      const users = await Search(value, this.state.users);\n      this.setState({\n        userSearch: users,\n        searchInput: value\n      });\n    };\n\n    this.handleDelete = id => {\n      const newArray = DeleteUser(id, this.state.userSearch);\n      this.setState({\n        userSearch: newArray,\n        users: newArray\n      });\n      if (id === this.state.todosAndPostsId) this.setState({\n        todosAndPostsVis: false\n      });\n    };\n\n    this.handleUpdate = obj => {\n      const UpdatedUsers = UpdateUser(this.state.userSearch, obj);\n      this.setState({\n        userSearch: UpdatedUsers,\n        users: UpdatedUsers\n      });\n    };\n\n    this.addUser = async obj => {\n      let newusersArr = AddNewUser(obj, this.state.users);\n      const userSearch = await Search(this.state.searchInput, newusersArr);\n      this.setState({\n        users: newusersArr,\n        userSearch: userSearch\n      });\n    };\n\n    this.showTDandPsts = id => {\n      this.hideAddUser(); //\n\n      this.setState({\n        todosAndPostsId: id\n      }); // \n    };\n\n    this.changeDisplay = () => this.setState(prevState => ({\n      AddUserDisplay: !prevState.AddUserDisplay,\n      todosAndPostsVis: false,\n      pressed: ''\n    }));\n\n    this.showTodosAndPosts = () => this.setState({\n      todosAndPostsVis: true\n    });\n\n    this.hideAddUser = () => this.setState({\n      AddUserDisplay: false\n    });\n\n    this.state = {\n      users: [],\n      todos: [],\n      posts: [],\n      userSearch: [],\n      usersAfterDelete: [],\n      todosAndPostsVis: false,\n      AddUserDisplay: false,\n      todosAndPostsId: '',\n      searchInput: '',\n      pressed: ''\n    };\n  } //Saving all data from api in state when the main page loads.\n\n\n  async componentDidMount() {\n    const users = await GetAllUsers();\n    const todos = await getAllTodos();\n    const posts = await getAllPosts();\n    this.setState({\n      users: users,\n      userSearch: users,\n      todos: todos,\n      posts: posts,\n      search: ''\n    });\n  } //Handleing the input from the client in the search box and finding the corresponding users and presents them.\n\n\n  // This function hides the \"add user\" component\n  render() {\n    const usersComps = this.state.userSearch.map((user, index) => {\n      // This map function renders all the 'user' components with their data.\n      return /*#__PURE__*/_jsxDEV(UserComp, {\n        show: this.showTodosAndPosts,\n        pressed: this.state.pressed,\n        todosArr: this.state.todos,\n        deleteFunc: this.handleDelete,\n        callBack: this.handleUpdate,\n        callback2: this.showTDandPsts,\n        user: user,\n        usersArray: this.state.userSearch\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 42\n      }, this), \"Search: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"searchBox\",\n        type: \"text\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"addbtn\",\n        onClick: this.changeDisplay,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 93\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 161\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 167\n      }, this), usersComps, /*#__PURE__*/_jsxDEV(AddUser, {\n        show: this.state.AddUserDisplay ? 'showAddUser' : 'hideAddUser',\n        callback1: this.addUser,\n        callback2: this.hideAddUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MainTodos, {\n        addTodo: this.addTodo,\n        visibility: this.state.todosAndPostsVis,\n        pressedFunc: this.pressHendler,\n        callback: this.completeTodo,\n        id: this.state.todosAndPostsId,\n        todos: this.state.todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MainPosts, {\n        addPost: this.addPost,\n        visibility: this.state.todosAndPostsVis,\n        pressedFunc: this.pressHendler,\n        id: this.state.todosAndPostsId,\n        posts: this.state.posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/REACT/Project_React_Classes/src/Components/MainPage.js"],"names":["AddNewUser","AddPost","AddTodo","CompleteTodo","DeleteUser","GetAllUsers","Search","UpdateUser","Component","getAllTodos","getAllPosts","UserComp","AddUser","MainTodos","MainPosts","Users","constructor","handleChange","e","value","target","users","state","setState","userSearch","searchInput","handleDelete","id","newArray","todosAndPostsId","todosAndPostsVis","handleUpdate","obj","UpdatedUsers","addUser","newusersArr","showTDandPsts","hideAddUser","changeDisplay","prevState","AddUserDisplay","pressed","showTodosAndPosts","todos","posts","usersAfterDelete","componentDidMount","search","render","usersComps","map","user","index","addTodo","pressHendler","completeTodo","addPost"],"mappings":"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","sourcesContent":["import { AddNewUser, AddPost, AddTodo, CompleteTodo, DeleteUser, GetAllUsers, Search, UpdateUser } from \"./Utils\";\r\nimport { Component } from \"react\";\r\nimport { getAllTodos } from \"./DALtodos\";\r\nimport { getAllPosts } from \"./DALposts\";\r\nimport UserComp from \"./userComp\";\r\nimport AddUser from \"./AddUserComp\";\r\nimport MainTodos from \"./MainTodos\";\r\nimport MainPosts from \"./MainPosts\";\r\nimport './StyleSheet.css';\r\n\r\nexport default class Users extends Component {\r\n    constructor() {\r\n        super()\r\n        //states:\r\n        this.state = {\r\n            users: [],\r\n            todos: [],\r\n            posts: [],\r\n            userSearch: [],\r\n            usersAfterDelete: [],\r\n            todosAndPostsVis: false,\r\n            AddUserDisplay: false,\r\n            todosAndPostsId: '',\r\n            searchInput: '',\r\n            pressed: ''\r\n        }\r\n    }\r\n\r\n    //Saving all data from api in state when the main page loads.\r\n    async componentDidMount() \r\n    {\r\n        const users = await GetAllUsers()                                                           \r\n        const todos = await getAllTodos()                                                           \r\n        const posts = await getAllPosts()                                                          \r\n        this.setState({ users: users, userSearch: users, todos: todos, posts: posts, search: '' })  \r\n    } \r\n\r\n    //Handleing the input from the client in the search box and finding the corresponding users and presents them.\r\n    handleChange = async (e) => \r\n    {                                  \r\n        const { value } = e.target;                               \r\n        const users = await Search(value, this.state.users)      \r\n        this.setState({ userSearch: users, searchInput: value })\r\n    }                                                          \r\n\r\n    //Getting the userId of the user that the client want to delete,if the user's todos & posts where open then it will close it:\r\n    handleDelete = (id) => \r\n    {\r\n        const newArray = DeleteUser(id, this.state.userSearch)   \r\n        this.setState({ userSearch: newArray, users: newArray }) \r\n        if (id === this.state.todosAndPostsId)               \r\n            this.setState({ todosAndPostsVis: false })          \r\n    }                                                          \r\n\r\n    //Updating a user in the local Array:\r\n    handleUpdate = (obj) => \r\n    {\r\n        const UpdatedUsers = UpdateUser(this.state.userSearch, obj)      \r\n        this.setState({ userSearch: UpdatedUsers, users: UpdatedUsers })\r\n    }                                                                 \r\n\r\n    //adding a user to the local array and using the search  to prevent problems if you adding a user while searching.\r\n    addUser = async (obj) => \r\n    {                                                \r\n        let newusersArr = AddNewUser(obj, this.state.users)                  \r\n        const userSearch = await Search(this.state.searchInput, newusersArr)\r\n        this.setState({ users: newusersArr, userSearch: userSearch })       \r\n    }                                                                    \r\n    \r\n    //\r\n    showTDandPsts = (id) => {\r\n        this.hideAddUser()                     //\r\n        this.setState({ todosAndPostsId: id })// \r\n    }\r\n\r\n    changeDisplay = () => this.setState((prevState) => ({ AddUserDisplay: !prevState.AddUserDisplay, todosAndPostsVis: false, pressed: '' }))// This function is toggling betwing true & false for the button add at the top of the screen so in will show or hide the \"add user\" component.\r\n    showTodosAndPosts = () => this.setState({ todosAndPostsVis: true }) // This function is changing the state of the todos & posts component to visible and it's trigered by pressing on the id label in the user component.\r\n    hideAddUser = () => this.setState({ AddUserDisplay: false })// This function hides the \"add user\" component\r\n    render() {\r\n        const usersComps = this.state.userSearch.map((user, index) => { // This map function renders all the 'user' components with their data.\r\n            return (<UserComp show={this.showTodosAndPosts} pressed={this.state.pressed} todosArr={this.state.todos} deleteFunc={this.handleDelete} callBack={this.handleUpdate} callback2={this.showTDandPsts} key={index} user={user} usersArray={this.state.userSearch} />)\r\n        })\r\n        return (<div className=\"mainDiv\"><br />\r\n            Search: <input className=\"searchBox\" type='text' onChange={this.handleChange} /><button className=\"addbtn\" onClick={this.changeDisplay}>Add</button><br /><br />\r\n            {usersComps}\r\n            <AddUser show={this.state.AddUserDisplay ? 'showAddUser' : 'hideAddUser'} callback1={this.addUser} callback2={this.hideAddUser} />\r\n            <MainTodos addTodo={this.addTodo} visibility={this.state.todosAndPostsVis} pressedFunc={this.pressHendler} callback={this.completeTodo} id={this.state.todosAndPostsId} todos={this.state.todos} />\r\n            <MainPosts addPost={this.addPost} visibility={this.state.todosAndPostsVis} pressedFunc={this.pressHendler} id={this.state.todosAndPostsId} posts={this.state.posts} />\r\n        </div>)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}