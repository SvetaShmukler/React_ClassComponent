{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/REACT/ProjectReactClasses/src/Components/Posts - Components/postsComp.js\";\nimport { Component } from \"react\";\nimport { GetAllPostsById } from \"../utils\";\nimport PostComp from \"./postComp\";\nimport AddPostComp from \"./addPostComp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PostsComp extends Component {\n  constructor() {\n    super();\n\n    this.changeDisplay = isAdded => {\n      if (isAdded) this.setState({\n        isAdded: true\n      });\n      /* Turn the display boolean to the opposite */\n\n      this.setState({\n        displayAddPost: !this.state.displayAddPost\n      });\n    };\n\n    this.state = {\n      posts: [],\n      userId: \"\",\n      displayAddPost: false,\n      isAdded: false\n    };\n  }\n\n  async componentDidMount() {\n    const posts = await GetAllPostsById(this.props.posts, this.props.userId);\n    this.setState({\n      userId: this.props.userId,\n      posts,\n      isAdded: false,\n      displayAddPost: false\n    });\n  }\n  /* Checking if the props send is diffrent from the last */\n\n\n  async componentDidUpdate() {\n    if (this.state.userId != this.props.userId || this.state.isAdded)\n      /* if user Added also go inside the if */\n      {\n        const posts = await GetAllPostsById(this.props.posts, this.props.userId);\n        this.setState({\n          userId: this.props.userId,\n          posts,\n          isAdded: false,\n          displayAddPost: false\n        });\n      }\n  }\n  /* gets bollean if user was added  */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: this.props.visibility ? \"block\" : \"none\",\n        position: \"absolute\",\n        bottom: \"5px\",\n        left: \"50px\"\n      },\n      children: this.state.displayAddPost ? /*#__PURE__*/_jsxDEV(AddPostComp, {\n        postsArray: this.props.posts,\n        userId: this.state.userId,\n        addPost: this.props.addPost,\n        changeDisplay: this.changeDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"title-todos\",\n          children: [\"User \", this.props.userId, \" posts\", /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              borderRadius: \"5px\",\n              marginLeft: \"16rem\",\n              marginBottom: \"3px\"\n            },\n            id: \"add-post\",\n            onClick: () => this.changeDisplay(),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"todos-container\",\n          style: {\n            textAlign: \"left\",\n            overflow: \"scroll\",\n            overflowX: \"hidden\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            border: \"1px black solid\",\n            width: \"400px\",\n            height: \"300px\"\n          },\n          children: this.state.posts.map((post, index) => {\n            return /*#__PURE__*/_jsxDEV(PostComp, {\n              post: post\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/REACT/ProjectReactClasses/src/Components/Posts - Components/postsComp.js"],"names":["Component","GetAllPostsById","PostComp","AddPostComp","PostsComp","constructor","changeDisplay","isAdded","setState","displayAddPost","state","posts","userId","componentDidMount","props","componentDidUpdate","render","display","visibility","position","bottom","left","addPost","borderRadius","marginLeft","marginBottom","textAlign","overflow","overflowX","flexDirection","alignItems","border","width","height","map","post","index"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport { GetAllPostsById } from \"../utils\";\r\nimport PostComp from \"./postComp\";\r\nimport AddPostComp from \"./addPostComp\";\r\n\r\nexport default class PostsComp extends Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {posts:[],userId:\"\", displayAddPost:false,isAdded:false}\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        const posts = await GetAllPostsById(this.props.posts,this.props.userId);\r\n        this.setState({userId:this.props.userId,posts,isAdded:false,displayAddPost:false})\r\n    }\r\n\r\n    /* Checking if the props send is diffrent from the last */\r\n    async componentDidUpdate()\r\n    {\r\n        if(this.state.userId!=this.props.userId || this.state.isAdded) /* if user Added also go inside the if */\r\n        {\r\n            const posts = await GetAllPostsById(this.props.posts,this.props.userId);\r\n            this.setState({userId:this.props.userId,posts,isAdded:false,displayAddPost:false})\r\n        }\r\n    }\r\n\r\n    /* gets bollean if user was added  */\r\n    changeDisplay = (isAdded) =>\r\n    {\r\n        if(isAdded)\r\n            this.setState({isAdded:true})\r\n        /* Turn the display boolean to the opposite */\r\n        this.setState({displayAddPost:!this.state.displayAddPost})\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(<div style={{display:this.props.visibility ? \"block\" : \"none\",position:\"absolute\",bottom:\"5px\",left:\"50px\"}}>\r\n\r\n            {/* Checking if Add Clicked and if does The Add user comonents show else the Posts */}\r\n            {this.state.displayAddPost ? <AddPostComp postsArray={this.props.posts} userId={this.state.userId} addPost={this.props.addPost} changeDisplay={this.changeDisplay}/> :\r\n            <div>\r\n                <div id=\"title-todos\">\r\n                    User {this.props.userId} posts \r\n                    <button  style={{borderRadius:\"5px\",marginLeft:\"16rem\",marginBottom:\"3px\"}} id=\"add-post\" onClick={() => this.changeDisplay()}>Add</button>\r\n                    </div>\r\n                <div id=\"todos-container\" style={{textAlign:\"left\",overflow:\"scroll\",overflowX:\"hidden\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\",border:\"1px black solid\",width:\"400px\",height:\"300px\"}}>\r\n                    {this.state.posts.map((post,index) =>\r\n                    {\r\n                        return(<PostComp key={index} post={post}/>)\r\n                    })}\r\n                </div>\r\n            </div>}\r\n        </div>)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}