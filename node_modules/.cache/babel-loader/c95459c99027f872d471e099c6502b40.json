{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/REACT/Project_React_Classes/src/Components/MainTodos.js\";\nimport { GetTodosById } from \"./Utils\";\nimport { Component } from \"react\";\nimport AddTodo from \"./addTodo\";\nimport Todo from \"./Todo\";\nimport './StyleSheet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MainTodos extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addTodo = title => {\n      this.props.addTodo(title, this.props.id);\n      this.showAddTodo();\n      this.setState({\n        add: true\n      });\n    };\n\n    this.handleChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.showAddTodo = () => this.setState(prevState => ({\n      showAddTodo: !prevState.showAddTodo\n    }));\n\n    this.state = {\n      todos: [],\n      title: '',\n      id: '',\n      add: false,\n      showAddTodo: false\n    };\n  } //If the userId was changed --->  update the component with the correct todos:\n\n\n  async componentDidUpdate() {\n    if (this.props.id !== this.state.id || this.state.add) {\n      const todos = await GetTodosById(this.props.id, this.props.todos);\n      this.setState({\n        id: this.props.id,\n        todos: todos,\n        add: false\n      });\n      this.props.pressedFunc(this.props.id);\n    }\n  } //Sending a new todo to the main page and hiding the add todo div:\n\n\n  //toggling the visibility of the todos divs\n  render() {\n    const todosMapper = this.state.todos.map((todo, index) => /*#__PURE__*/_jsxDEV(Todo, {\n      todo: todo,\n      completeTodo: this.props.callback\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 67\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: this.props.visibility ? 'block' : 'none'\n      },\n      className: \"MainTodosDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: this.state.showAddTodo ? 'none' : 'block'\n        },\n        className: \"todosTitle\",\n        children: [\"Todos: User \", this.props.id, /*#__PURE__*/_jsxDEV(\"input\", {\n          value: \"Add\",\n          className: \"addTodo\",\n          onClick: this.showAddTodo,\n          type: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 131\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: this.state.showAddTodo ? 'none' : 'block'\n        },\n        className: \"todosDiv\",\n        children: todosMapper\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n        id: this.props.id,\n        showAddTodo: this.state.showAddTodo,\n        hide: this.showAddTodo,\n        addTodo: this.addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/REACT/Project_React_Classes/src/Components/MainTodos.js"],"names":["GetTodosById","Component","AddTodo","Todo","MainTodos","constructor","props","addTodo","title","id","showAddTodo","setState","add","handleChange","e","target","name","value","prevState","state","todos","componentDidUpdate","pressedFunc","render","todosMapper","map","todo","index","callback","display","visibility"],"mappings":"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","sourcesContent":["import { GetTodosById } from \"./Utils\";\r\nimport { Component } from \"react\";\r\nimport AddTodo from \"./addTodo\";\r\nimport Todo from \"./Todo\";\r\nimport './StyleSheet.css';\r\n\r\nexport default class MainTodos extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            todos: [],\r\n            title: '',\r\n            id: '',\r\n            add: false,\r\n            showAddTodo: false,\r\n        }\r\n    }\r\n    //If the userId was changed --->  update the component with the correct todos:\r\n    async componentDidUpdate() \r\n    {\r\n        if ((this.props.id !== this.state.id) || this.state.add) {                         \r\n            const todos = await GetTodosById(this.props.id, this.props.todos)             \r\n            this.setState({ id: this.props.id, todos: todos, add: false })               \r\n            this.props.pressedFunc(this.props.id)                                       \r\n        }\r\n    }\r\n\r\n    //Sending a new todo to the main page and hiding the add todo div:\r\n    addTodo = (title) => \r\n    {\r\n        this.props.addTodo(title, this.props.id)            \r\n        this.showAddTodo()                                 \r\n        this.setState({ add: true })               \r\n    }\r\n    \r\n    //handling the input from the client\r\n\r\n    handleChange = (e) => this.setState({ [e.target.name]: e.target.value })\r\n    showAddTodo = () => this.setState((prevState) => ({ showAddTodo: !prevState.showAddTodo }))//toggling the visibility of the todos divs\r\n    render() {\r\n        const todosMapper = this.state.todos.map((todo, index) => <Todo key={index} todo={todo} completeTodo={this.props.callback} />)\r\n        return (<div style={{ display: this.props.visibility ? 'block' : 'none' }} className='MainTodosDiv' >\r\n            <div style={{ display: this.state.showAddTodo ? 'none' : 'block' }} className=\"todosTitle\">Todos: User {this.props.id}<input value='Add' className='addTodo' onClick={this.showAddTodo} type='button' /></div>\r\n            <div style={{ display: this.state.showAddTodo ? 'none' : 'block' }} className='todosDiv' >{todosMapper}</div>\r\n            <AddTodo id={this.props.id} showAddTodo={this.state.showAddTodo} hide={this.showAddTodo} addTodo={this.addTodo}/>\r\n        </div>)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}